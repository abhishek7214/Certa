{
	"info": {
		"_postman_id": "098bf4eb-f8dd-424f-9075-1f7377f5e822",
		"name": "Certa",
		"description": "# About this collection\n\nThis collection helps you set up contract tests to ensure that two separate systems are compatible and can communicate with one another.\n\n## **Using the collection**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n### Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)\n\n[  \n](https://postman.postman.co/documentation/24552533-5bead607-0197-4e1d-87d4-3160bc7631c1?entity=&branch=&version=)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28777245"
	},
	"item": [
		{
			"name": "Wheater map Api",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"value of longitude is -0.13\",function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.coord.lon).to.eql(-0.13);",
							"});",
							"",
							"pm.test(\"value of latitude is 51.51\",function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.coord.lat).to.eql(51.51);",
							"});",
							"",
							"pm.test(\"value of name is London\" , function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).equals('London');",
							"});",
							"",
							"pm.test(\"value of id is 2643743\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).equals(2643743);",
							"});",
							"",
							"pm.test(\"value of wind speed is greater than  0\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.wind.speed).greaterThan(0);",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b6%20907d289e10d714a6e88b30761fae22.",
					"protocol": "https",
					"host": [
						"samples",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "q",
							"value": "London,uk"
						},
						{
							"key": "appid",
							"value": "b6%20907d289e10d714a6e88b30761fae22."
						}
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://postman-echo.com"
		}
	]
}